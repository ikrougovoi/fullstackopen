{"version":3,"sources":["services/persons.js","components/Persons.js","components/Filter.js","components/AddNew.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","handleDelete","name","number","onClick","Persons","persons","map","key","Filter","filter","handleChange","value","onChange","AddNew","submit","newNameValue","newNumberValue","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","useEffect","personService","initialPersons","filteredPersons","toLowerCase","indexOf","event","target","preventDefault","personExists","findIndex","window","confirm","updatedPerson","setTimeout","catch","error","console","log","returnedPerson","concat","deletedPerson","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f719b97.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n}\n","import React from 'react';\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <p>{person.name} | {person.number} <button onClick={handleDelete}>Delete</button></p>\n  )\n};\n\nconst Persons = ({ persons, handleDelete }) => {\n\n  const showPeople = () => persons.map(person =>\n    <Person key={person.name} person={person} handleDelete={() => handleDelete(person.id, person.name)} />\n  );\n\n  return (\n    <div>\n      {showPeople()}\n    </div>\n  )\n};\n\nexport default Persons","import React from 'react';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <div>\n      <h3>search</h3>\n      filter shown with <input value={filter} onChange={handleChange} />\n    </div>\n  )\n};\n\nexport default Filter;","import React from 'react';\n\nconst AddNew = ({ submit, newNameValue, newNumberValue, handleNameChange, handleNumberChange }) => {\n  return (\n    <div>\n      <form onSubmit={submit}>\n        name: <input value={newNameValue} onChange={handleNameChange} /> <br/>\n        number: <input value={newNumberValue} onChange={handleNumberChange} />\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n};\n\nexport default AddNew;","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  };\n\n  return (\n    <div className='message'>\n      {message}\n    </div>\n  )\n\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport AddNew from './components/AddNew';\nimport Notification from './components/Notification';\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n\t\tpersonService\n\t\t\t.getAll()\n\t\t\t.then(initialPersons => {\n\t\t\t\tsetPersons(initialPersons);\n\t\t\t});\n\t}, []);\n\n  const filteredPersons = persons.filter((person) => \n    person.name.toLowerCase().indexOf(filter) > -1\n  );\n\n  const addName = (event) => {\n    event.preventDefault();\n\n    const personExists = persons.findIndex((person) =>\n      person.name === newName\n    );\n\n    if (personExists >= 0) {\n      if(window.confirm(`${newName} is already in the phonebook, replace the old number with the new one?`)) {\n        personService\n          .update(persons[personExists].id, {name: newName, number: newNumber})\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== persons[personExists].id ? person : updatedPerson));\n            setNotification(`${updatedPerson.name} updated successfully.`);\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000);\n          })\n          .catch(error => {\n            console.log('error!?');\n            setNotification(`Information for ${newName} has already been removed from the server.`);\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000);\n          });\n      };\n    } else {\n      personService\n        .create({ name: newName, number: newNumber })\n        .then(returnedPerson => {\n          setNotification(`${newName} added successfully.`);\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000);\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch(error => {\n          setNotification(error.response.data.error);\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000);\n        });\n    };\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleDelete = (id, name) => {\n    if(window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(deletedPerson => {\n          setNotification(`removed ${name} from database.`);\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000);\n          console.log(deletedPerson);\n          setPersons(persons.filter(p => p.id !== id));\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter value={filter} handleChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <AddNew submit={addName} newNameValue={newName} newNumberValue={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={filteredPersons} handleDelete={handleDelete} />\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}